{"version":3,"sources":["utilities/reactgithub.jpg","utilities/styles.js","components/Form.js","components/Card.js","components/CardList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","styles","appLogo","animation","height","margin","borderRadius","app","backgroundColor","minHeight","display","flexDirection","alignItems","justifyContent","color","form","marginBottom","inputText","padding","fontSize","button","border","textAlign","cursor","cardGroup","column","width","card","boxShadow","cardImg","cardContainer","cardTitle","cardUserName","fontWeight","cardButton","outline","Form","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","userName","handleSubmit","event","preventDefault","axios","get","then","resp","props","onSubmit","data","setState","inherits","createClass","key","value","_this2","react_default","a","createElement","style","type","onChange","target","placeholder","required","React","Component","Card","alt","src","avatar_url","name","bio","blog","CardList","cards","map","components_Card","App","addNewCard","cardInfo","prevState","logo","components_Form","components_CardList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4ba4a4a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reactgithub.6b043097.jpg\";","// styles (css in js)\r\nconst styles = {\r\n  // Main app styles\r\n  appLogo: {\r\n    animation: 'appLogoSpin infinite 20s linear',\r\n    height: '20vmin',\r\n    margin: 20,\r\n    borderRadius: 20\r\n  },\r\n  app: {\r\n    backgroundColor: '#282c34',\r\n    minHeight: '100vh',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: 'white'\r\n  },\r\n  // Form styles\r\n  form: {\r\n    marginBottom: '20px'\r\n  },\r\n  inputText: {\r\n    padding: 8,\r\n    fontSize: 18\r\n  },\r\n  button: {\r\n    border: 'none',\r\n    padding: 10,\r\n    fontSize: 18,\r\n    color: 'white',\r\n    backgroundColor: '#000',\r\n    textAlign: 'center',\r\n    cursor: 'pointer'\r\n  },\r\n  // CardList style\r\n  cardGroup: {\r\n    display: 'flex'\r\n  },\r\n  // Card styles\r\n  column: {\r\n    width: '80%',\r\n    marginBottom: 16,\r\n    padding: '8px',\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    margin: '1em'\r\n  },\r\n  card: { \r\n    margin: '1em',\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2)'\r\n     },\r\n  cardImg: { width: '100%' },\r\n  cardContainer: {\r\n    padding: '0 16px',\r\n    color: '#000'\r\n  },\r\n  cardTitle: { color: 'grey' },\r\n  cardUserName: { fontWeight: 'bold' },\r\n  cardButton: {\r\n    border: 'none',\r\n    outline: 0,\r\n    display: 'inlineBlock',\r\n    padding: 8,\r\n    marginBottom: 10,\r\n    color: 'white',\r\n    backgroundColor: '#000',\r\n    textAlign: 'center',\r\n    cursor: 'pointer',\r\n    width: '100%'\r\n  }\r\n};\r\n\r\nexport default styles;","import React from 'react';\r\nimport axios from 'axios';\r\nimport styles from '../utilities/styles';\r\n\r\nexport class Form extends React.Component {\r\n  state = {\r\n    userName: ''\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    axios\r\n      .get(`https://api.github.com/users/${this.state.userName}`)\r\n      .then(resp => {\r\n        this.props.onSubmit(resp.data)\r\n        this.setState({ userName: '' })\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form style={styles.form} onSubmit={this.handleSubmit}>\r\n        <input\r\n          style={styles.inputText}\r\n          type=\"text\"\r\n          value={this.state.userName}\r\n          onChange={event => this.setState({ userName: event.target.value })}\r\n          placeholder=\"GitHub Username\"\r\n          required\r\n        />\r\n        <button style={styles.button} type=\"submit\">Add card</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport styles from '../utilities/styles';\r\n\r\nexport const Card = props => {\r\n  return (\r\n    <div style={styles.column}>\r\n      <div style={styles.card}>\r\n        <img alt=\"avatar\" style={styles.cardImg} src={props.avatar_url} />\r\n        <div style={styles.cardContainer}>\r\n          <h2 style={styles.cardUserName}>{props.name}</h2>\r\n          <p style={styles.cardTitle}>{props.bio}</p>\r\n          <p>{props.blog}</p>\r\n          <p><button style={styles.cardButton}>Contact</button></p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nimport styles from '../utilities/styles';\r\n\r\nexport const CardList = props => {\r\n  return <div style={styles.cardGroup}>{props.cards.map(card => <Card {...card} />)}</div>;\r\n};\r\n\r\nexport default CardList;","import React from 'react'\r\nimport Form from './components/Form';\r\nimport CardList from './components/CardList';\r\nimport styles from './utilities/styles';\r\nimport logo from './utilities/reactgithub.jpg';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    cards: []\r\n  };\r\n\r\n  addNewCard = cardInfo => {\r\n    this.setState(prevState => ({\r\n      cards: prevState.cards.concat(cardInfo)\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={styles.app}>\r\n        <img src={logo} style={styles.appLogo} alt=\"logo\" />\r\n        <Form onSubmit={this.addNewCard} />\r\n        <CardList cards={this.state.cards} />\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}